BROKER SCHEMA core.audit

DECLARE CoreAuditDetailEnabled EXTERNAL BOOLEAN TRUE;

CREATE PROCEDURE AuditDetailByVal(IN rEnv REFERENCE, IN key CHARACTER, IN value CHARACTER)
BEGIN
	DECLARE J INTEGER CARDINALITY(rEnv.__CoreAuditBusKeyNm__[]);
	SET rEnv.__CoreAuditBusKeyNm__[J+1] = auditTrim(key, 128);
	SET rEnv.__CoreAuditBusValCd__[J+1] = auditTrim(value, 256);
END;
CREATE PROCEDURE AuditDetailByRef(IN rEnv REFERENCE, IN ref REFERENCE, IN name CHARACTER)
BEGIN
	DECLARE J INTEGER CARDINALITY(rEnv.__CoreAuditBusKeyNm__[]);
	SET rEnv.__CoreAuditBusKeyNm__[J+1] = auditTrim(name, 128);
	SET rEnv.__CoreAuditBusValCd__[J+1] = auditTrim(FIELDVALUE(ref.{name}), 256);
END;

DECLARE _Audit CONSTANT CHARACTER 'Audit';
DECLARE _Store CONSTANT CHARACTER 'Store';
DECLARE _Vendor CONSTANT CHARACTER 'Vendor';
DECLARE _WMStaging CONSTANT CHARACTER 'WMStaging';
DECLARE _PIXTransaction CONSTANT CHARACTER 'PIXTransaction';
DECLARE _DistributionAdjustment CONSTANT CHARACTER 'DistributionAdjustment';
DECLARE _Receipts CONSTANT CHARACTER 'Receipts';
DECLARE _InventoryAdjustment CONSTANT CHARACTER 'InventoryAdjustment';

CREATE FILTER MODULE audit_detail_FilterAuditDetailIsEnabled
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;
		RETURN TRUE=CoreAuditDetailEnabled AND rEnv.__CoreAuditId__ IS NOT NULL AND ''<>rEnv.__CoreAuditId__;
	END;
END MODULE;

CREATE FILTER MODULE audit_FilterSelectFromIIB_AUDITTables
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE returnValue BOOLEAN FALSE;
		DECLARE rEnv REFERENCE TO Environment;
		SET returnValue = (0=CARDINALITY(rEnv.SelectFromIIB_AUDIT_XPATH[]) OR 0=CARDINALITY(rEnv.SelectFromIIB_AUDIT_XPATH_NS[]) OR 0=CARDINALITY(rEnv.SelectFromIIB_AUDIT_XPATH_XREF[]));
		RETURN returnValue;
	END;
END MODULE;

CREATE DATABASE MODULE audit_SelectFromIIB_AUDITTables
	DECLARE selectFromIIB_AUDIT_XPATH CONSTANT CHARACTER 'SELECT AUDIT_XPATH_ID,AUDIT_XPATH_PARENT_ID,AUDIT_XPATH,AUDIT_XPATH_DESCR FROM IIB.IIB_AUDIT_XPATH';
	DECLARE selectFromIIB_AUDIT_XPATH_NS CONSTANT CHARACTER 'SELECT AUDIT_XPATH_NS_ID,AUDIT_XPATH_NS,AUDIT_XPATH_NS_URL FROM IIB.IIB_AUDIT_XPATH_NS';
	DECLARE selectFromIIB_AUDIT_XPATH_XREF CONSTANT CHARACTER 'SELECT AUDIT_XPATH_XREF_ID,AUDIT_XPATH_NS_ID,AUDIT_XPATH_ID FROM IIB.IIB_AUDIT_XPATH_XREF';
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;
		IF 0=CARDINALITY(rEnv.SelectFromIIB_AUDIT_XPATH[]) THEN
			SET rEnv.SelectFromIIB_AUDIT_XPATH[] = PASSTHRU(selectFromIIB_AUDIT_XPATH);
		END IF;
		IF 0=CARDINALITY(rEnv.SelectFromIIB_AUDIT_XPATH_NS[]) THEN
			SET rEnv.SelectFromIIB_AUDIT_XPATH_NS[] = PASSTHRU(selectFromIIB_AUDIT_XPATH_NS);
		END IF;
		IF 0=CARDINALITY(rEnv.SelectFromIIB_AUDIT_XPATH_XREF[]) THEN
			SET rEnv.SelectFromIIB_AUDIT_XPATH_XREF[] = PASSTHRU(selectFromIIB_AUDIT_XPATH_XREF);
		END IF;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE audit_SelectFromIIB_AUDIT_XPATHWhereAUDIT_XPATH_PARENT_IDIsNull
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;
		DELETE FIELD rEnv.Configuration.CoreAudit;
		DECLARE A INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH__[]);
		WHILE A > 0 DO
			DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATH__[A];
			SET A = A - 1;
		END WHILE;
		DECLARE B INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH_XREF__[]);
		WHILE B > 0 DO
			DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATH_XREF__[B];
			SET B = B - 1;
		END WHILE;
		DECLARE C INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH_NS__[]);
		WHILE C > 0 DO
			DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATH_NS__[C];
			SET C = C - 1;
		END WHILE;
		DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATHIndex__;
		SET rEnv.__SelectFromIIB_AUDIT_XPATH__[] = SELECT A.AUDIT_XPATH_ID,A.AUDIT_XPATH_PARENT_ID,A.AUDIT_XPATH,A.AUDIT_XPATH_DESCR FROM rEnv.SelectFromIIB_AUDIT_XPATH[] AS A WHERE A.AUDIT_XPATH_PARENT_ID IS NULL;
		SET OutputRoot = InputRoot;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE audit_SelectFromIIB_AUDIT_XPATHWhereAUDIT_XPATH_PARENT_ID
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;
		DECLARE A INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH__[]);
		WHILE A > 0 DO
			DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATH__[A];
			SET A = A - 1;
		END WHILE;
		DECLARE B INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH_XREF__[]);
		WHILE B > 0 DO
			DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATH_XREF__[B];
			SET B = B - 1;
		END WHILE;
		DECLARE C INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH_NS__[]);
		WHILE C > 0 DO
			DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATH_NS__[C];
			SET C = C - 1;
		END WHILE;
		DECLARE rConf REFERENCE TO rEnv.Configuration;
		DECLARE AUDIT_XPATH_ID INTEGER CAST(CAST(rConf.CoreAudit.AUDIT_XPATH_ID AS DECIMAL) AS INTEGER);
		SET rEnv.__SelectFromIIB_AUDIT_XPATHIndex__ = 0;
		CALL _audit_SelectFromIIB_AUDIT_XPATHWhereAUDIT_XPATH_PARENT_ID(rEnv, AUDIT_XPATH_ID);
		SET OutputRoot = InputRoot;
		RETURN TRUE;
	END;
	CREATE PROCEDURE _audit_SelectFromIIB_AUDIT_XPATHWhereAUDIT_XPATH_PARENT_ID(IN rEnv REFERENCE, IN AUDIT_XPATH_ID INTEGER)
	BEGIN
		DECLARE AuditXPathId CHARACTER CAST(AUDIT_XPATH_ID AS CHARACTER);
		SET rEnv.__SelectFromIIB_AUDIT_XPATHResults__.{AuditXPathId}._[] = SELECT A.AUDIT_XPATH_ID,A.AUDIT_XPATH_PARENT_ID,A.AUDIT_XPATH,A.AUDIT_XPATH_DESCR FROM rEnv.SelectFromIIB_AUDIT_XPATH[] AS A WHERE A.AUDIT_XPATH_PARENT_ID=AUDIT_XPATH_ID;
		DECLARE I INTEGER 1;
		DECLARE J INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATHResults__.{AuditXPathId}._[]);
		WHILE I <= J DO
			SET rEnv.__SelectFromIIB_AUDIT_XPATHIndex__ = rEnv.__SelectFromIIB_AUDIT_XPATHIndex__+1;
			SET rEnv.__SelectFromIIB_AUDIT_XPATH__[rEnv.__SelectFromIIB_AUDIT_XPATHIndex__] = rEnv.__SelectFromIIB_AUDIT_XPATHResults__.{AuditXPathId}._[I];
			SET AUDIT_XPATH_ID = CAST(CAST(rEnv.__SelectFromIIB_AUDIT_XPATHResults__.{AuditXPathId}._[I].AUDIT_XPATH_ID AS DECIMAL) AS INTEGER);
			CALL _audit_SelectFromIIB_AUDIT_XPATHWhereAUDIT_XPATH_PARENT_ID(rEnv, AUDIT_XPATH_ID);
			SET I = I + 1;
		END WHILE;
		DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATHResults__.{AuditXPathId};
		RETURN;
	END;
END MODULE;

CREATE COMPUTE MODULE audit_SelectFromIIB_AUDIT_XPATH_XREF
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;
		IF 0<CARDINALITY(rEnv.Configuration.CoreAudit.*[]) THEN
			DECLARE XPATH_ID INTEGER CAST(CAST(rEnv.Configuration.CoreAudit.AUDIT_XPATH_ID AS DECIMAL) AS INTEGER);
			SET rEnv.__SelectFromIIB_AUDIT_XPATH_XREFResults__[] = SELECT A.AUDIT_XPATH_XREF_ID,A.AUDIT_XPATH_NS_ID,A.AUDIT_XPATH_ID FROM rEnv.SelectFromIIB_AUDIT_XPATH_XREF[] AS A WHERE A.AUDIT_XPATH_ID=XPATH_ID;
			DECLARE K1 INTEGER 1;
			DECLARE K2 INTEGER 1;
			DECLARE L INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH_XREFResults__[]);
			WHILE K2 <= L DO
				SET rEnv.__SelectFromIIB_AUDIT_XPATH_XREF__[K1] = rEnv.__SelectFromIIB_AUDIT_XPATH_XREFResults__[K2]; 
				SET K1 = K1 + 1;
				SET K2 = K2 + 1;
			END WHILE;
			WHILE K2 > 0 DO
				DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATH_XREFResults__[K2]; 
				SET K2 = K2 - 1;
			END WHILE;
		ELSE
			DECLARE I INTEGER 1;
			DECLARE J INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH__[]);
			DECLARE K1 INTEGER 1;
			WHILE I <= J DO
				DECLARE XPATH_ID INTEGER CAST(rEnv.__SelectFromIIB_AUDIT_XPATH__[I].AUDIT_XPATH_ID AS INTEGER);
				SET rEnv.__SelectFromIIB_AUDIT_XPATH_XREFResults__[] = SELECT A.AUDIT_XPATH_XREF_ID,A.AUDIT_XPATH_NS_ID,A.AUDIT_XPATH_ID FROM rEnv.SelectFromIIB_AUDIT_XPATH_XREF[] AS A WHERE A.AUDIT_XPATH_ID=XPATH_ID;
				DECLARE K2 INTEGER 1;
				DECLARE L INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH_XREFResults__[]);
				WHILE K2 <= L DO
					SET rEnv.__SelectFromIIB_AUDIT_XPATH_XREF__[K1] = rEnv.__SelectFromIIB_AUDIT_XPATH_XREFResults__[K2]; 
					SET K1 = K1 + 1;
					SET K2 = K2 + 1;
				END WHILE;
				SET I = I + 1;
				WHILE K2 > 0 DO
					DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATH_XREFResults__[K2]; 
					SET K2 = K2 - 1;
				END WHILE;
			END WHILE;
		END IF;
		SET OutputRoot = InputRoot;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE audit_SelectFromIIB_AUDIT_XPATH_NS
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;
		DECLARE I1 INTEGER 1;
		DECLARE I2 INTEGER 0;
		DECLARE J INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH_XREF__[]);
		WHILE I1 <= J DO
			DECLARE XPATH_NS_ID INTEGER CAST(rEnv.__SelectFromIIB_AUDIT_XPATH_XREF__[I1].AUDIT_XPATH_NS_ID AS INTEGER);
			SET rEnv.__SelectFromIIB_AUDIT_XPATH_NSResults__[] = SELECT A.AUDIT_XPATH_NS_ID,A.AUDIT_XPATH_NS,A.AUDIT_XPATH_NS_URL FROM rEnv.SelectFromIIB_AUDIT_XPATH_NS[] AS A WHERE A.AUDIT_XPATH_NS_ID=XPATH_NS_ID;
			DECLARE ns CHARACTER rEnv.__SelectFromIIB_AUDIT_XPATH_NSResults__[1].AUDIT_XPATH_NS;
			IF ns IS NULL THEN--OR 0=LENGTH(ns) THEN
				SET ns = '';--'_'
			END IF;
			SET ns = ns||':'||rEnv.__SelectFromIIB_AUDIT_XPATH_NSResults__[1].AUDIT_XPATH_NS_URL;
			DECLARE count INTEGER 0;
			IF rEnv.__SelectFromIIB_AUDIT_XPATH_NSCount__.{ns} IS NOT NULL THEN
				SET count = rEnv.__SelectFromIIB_AUDIT_XPATH_NSCount__.{ns};
			END IF;
			SET count=count+1;
			IF 1=count THEN
				SET I2 = I2 + 1;
				SET rEnv.__SelectFromIIB_AUDIT_XPATH_NS__[I2] = rEnv.__SelectFromIIB_AUDIT_XPATH_NSResults__[1];
			END IF;
			SET rEnv.__SelectFromIIB_AUDIT_XPATH_NSCount__.{ns} = count;
			SET I1 = I1 + 1;
		END WHILE;
		DECLARE A INTEGER CARDINALITY(rEnv.__SelectFromIIB_AUDIT_XPATH_NSResults__[]);
		WHILE A > 0 DO
			DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATH_NSResults__[A];
			SET A = A - 1;
		END WHILE;
		DELETE FIELD rEnv.__SelectFromIIB_AUDIT_XPATH_NSCount__;
		SET OutputRoot = InputRoot;
		RETURN TRUE;
	END;
END MODULE;

CREATE FILTER MODULE audit_detail_XPathIsMatched
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		RETURN 0<CARDINALITY(Environment.Configuration.CoreAudit.AUDIT_XPATH_ID[]); 
	END;
END MODULE;

CREATE DATABASE MODULE audit_InsertIntoIIB_AUDIT_DETAIL
	DECLARE insertIntoIIB_AUDIT_DETAIL CHARACTER
	'INSERT INTO IIB.IIB_AUDIT_DETAIL('||
	'AUDIT_DETAIL_ID,AUDIT_ID,INSERT_DTS,CREATE_USER_ID,RECORD_CREATE_TMS,RECORD_UPDATE_TMS,UPDATE_USER_ID,BUS_KEY_NM,BUS_VALUE_CD'||
	---------------1--------2----------3--------------4-----------------5-----------------6--------------7----------8------------9
	') VALUES('||
	'IIB.IIB_AUDIT_DETAIL_SEQ.NEXTVAL,?,?,?,?,?,?,?,?'||
	----------------------------------2-------------9
	')';
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;
		DECLARE ORA_SYSTIMESTAMP CHARACTER rEnv.__CoreAuditOraSystimestamp__;
		IF ORA_SYSTIMESTAMP IS NULL THEN
			SET rEnv.__ORA_SYSTIMESTAMP__[] = PASSTHRU('SELECT to_char(SYSTIMESTAMP, ''YYYY-MM-DD HH24:MI:SS.FF'') AS "VALUE" FROM DUAL');
			SET rEnv.__CoreAuditOraSystimestamp__ = rEnv.__ORA_SYSTIMESTAMP__[1].VALUE;
			DELETE FIELD rEnv.__ORA_SYSTIMESTAMP__[1];
			SET ORA_SYSTIMESTAMP = rEnv.__CoreAuditOraSystimestamp__;
		END IF;
		DECLARE I INTEGER 1;
		DECLARE J INTEGER CARDINALITY(rEnv.__CoreAuditBusKeyNm__[]);
		WHILE I <= J DO
			DECLARE IIB_GMTTIMESTAMP CHARACTER auditTrim(CAST(CURRENT_GMTTIMESTAMP AS CHARACTER), 64);
			SET IIB_GMTTIMESTAMP = SUBSTRING(IIB_GMTTIMESTAMP FROM 15 FOR LENGTH(IIB_GMTTIMESTAMP)-15);
			SET rEnv.__InsertIntoIIB_AUDIT_DETAIL__[] = PASSTHRU(insertIntoIIB_AUDIT_DETAIL VALUES(
			--rEnv.__CoreAuditDetailId__,--Automatically generated during INSERT and IIB_AUDIT_DETAIL_SEQ.NEXTVAL
			rEnv.__CoreAuditId__, --2
			IIB_GMTTIMESTAMP, --3
			CORE_AUDIT_USER_ID, --4
			ORA_SYSTIMESTAMP, --5
			ORA_SYSTIMESTAMP, --6
			CORE_AUDIT_USER_ID,  --7
			rEnv.__CoreAuditBusKeyNm__[I], --8
			rEnv.__CoreAuditBusValCd__[I] --9
			));
			WHILE 0<CARDINALITY(rEnv.__InsertIntoIIB_AUDIT_DETAIL__[]) DO
				DELETE FIELD rEnv.__InsertIntoIIB_AUDIT_DETAIL__[<];
			END WHILE;
			SET I = I + 1;
		END WHILE;
		WHILE I > 0 DO
			DELETE FIELD rEnv.__CoreAuditDetailId__[I];
			DELETE FIELD rEnv.__CoreAuditBusKeyNm__[I];
			DELETE FIELD rEnv.__CoreAuditBusValCd__[I];
			SET I = I - 1;
		END WHILE;
		RETURN TRUE;
	END;
END MODULE;