



BROKER SCHEMA etc.giftcard.retek

CREATE COMPUTE MODULE mod_set_env_918
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;

		DECLARE refInpMsg REFERENCE TO InputRoot.DFDL.Input918.body;
		DECLARE ExtrctGivxCrdNumb CHARACTER SUBSTRING(refInpMsg.GivexNumb FROM 7 FOR 13);

		SET Environment.GivxCrdNumb = CAST(ExtrctGivxCrdNumb AS INTEGER);
		SET Environment.ChkDgt = SUBSTRING(CAST(refInpMsg.GivexNumb AS CHARACTER) FROM 20);		
		RETURN TRUE;
	END;
END MODULE;

CREATE DATABASE MODULE mod_check_giftcard_918
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		DECLARE query CHARACTER;
		CALL core.log.Debug(MessageFlowLabel||'Module name: mod_check_giftcard_918 - select start');
		SET query = 'SELECT GC.*, GCH.*, GCD.DENOMINATIONAMOUNT
		FROM '||RetekSchema||'.GiftCard GC, '||RetekSchema||'.GiftCardHistory GCH, '||RetekSchema||'.GiftCardType GCT, '||RetekSchema||'.GiftCardDenomination GCD
		WHERE
		GC.GiftCardNumber = ? and
		GC.GiftCardNumber = GCH.GiftCardNumber
		AND GCT.SKU = GC.SKU
		AND GCD.DenominationID = GCT.DenominationID
		AND (GCH.Line_Transaction_ID IS NOT NULL OR
		GCH.Payment_Transaction_ID IS NOT NULL)
		ORDER BY GCH.GiftCardHistTimestamp
		desc FETCH FIRST 1 ROWS ONLY;
		';
		--Store existing Gift card details in Environment
		SET Environment.ExstGiftCrdDtls.row[] =
		PASSTHRU(query
		VALUES (Environment.GivxCrdNumb));
		CALL core.log.Debug(MessageFlowLabel||'Module name: mod_check_giftcard_918 - select end');
		RETURN TRUE;
	END;
END MODULE;


CREATE COMPUTE MODULE mod_set_currentGiftCard_value
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		SEt OutputRoot=InputRoot;
		
		-- Check if the amount is denominal
		IF ( Environment.ExstGiftCrdDtls.row[1].DENOMINATIONAMOUNT > 0) THEN
			SET Environment.GiftCrdVal = Environment.ExstGiftCrdDtls.row[1].HISTORYAMOUNT;
		ELSE
			SET Environment.GiftCrdVal = 0.0;
		END IF;
		
		-- Reference to existing Gift card details
		DECLARE refCurGiftCrd REFERENCE TO Environment.ExstGiftCrdDtls.row[1];

		SET Environment.GvxMsdId = SUBSTRING(refCurGiftCrd.GIFTCARDHISTORYCOMMENT FROM 1 FOR 3);
		CALL core.log.Debug(MessageFlowLabel||'Module name: set_currentGiftCard - GiftCardValue'||CAST(Environment.GiftCrdVal AS CHAR));
		CALL core.log.Debug(MessageFlowLabel||'Module name: set_currentGiftCard - Reversal msgId'||CAST(Environment.GvxMsdId AS CHAR));	
	END;
END MODULE;


CREATE COMPUTE MODULE mod_create_dataconnect_response_918
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.Properties.MessageType = '{}:Output_918';

		DECLARE refOut,refOutBody REFERENCE TO OutputRoot;
		DECLARE refInpMsg REFERENCE TO InputRoot.DFDL.Input918.body;
		DECLARE refResult REFERENCE TO Environment.CurGiftCrd.Row[1];
		-- Create Dataconect message to send the Activated Gift Card details
		-------------
		-- Start
		-------------
		CREATE LASTCHILD OF OutputRoot AS refOut DOMAIN 'DFDL';
		CREATE LASTCHILD OF refOut.Output918 AS refOutBody NAME 'body';
		SET refOutBody.TransactionCode = refInpMsg.TransCode;
		SET refOutBody.Result = '0';
		SET refOutBody.Msg = refInpMsg.TransCode;
		SET refOutBody.CertBal = CAST(refResult.GIFTCARDVALUE AS CHARACTER);
		SET refOutBody.CertExpDate = SUBSTRING(CAST(refResult.GIFTCARDEXPIRYDATE AS CHARACTER) FROM 7 FOR 10);
		-------------
		-- End
		-------------
		RETURN TRUE;
	RETURN TRUE;
	END;
END MODULE;
CREATE DATABASE MODULE mod_reverse_giftcard_906
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Reference to existing Gift card details
		DECLARE refCurGiftCrd REFERENCE TO Environment.ExstGiftCrdDtls.row[1];
		DECLARE refInpMsg REFERENCE TO Root.DFDL.Input918.body;
		DECLARE Insert_GCH CHARACTER;
		DECLARE LineTransId CHARACTER SUBSTRING(refInpMsg.TransCode FROM 1 FOR 3)||'*'||SUBSTRING(refInpMsg.TransCode FROM 4 FOR 2)||'*'||CAST( CURRENT_DATE AS CHARACTER FORMAT 'yyyyMMdd')||'*'||SUBSTRING(refInpMsg.TransCode FROM 6);
		
		------------- POE-27321 converted to MST time stamp --------
		DECLARE GCHTS TIMESTAMP;
        DECLARE mstGCHTS CHARACTER;
   		SET GCHTS = CAST(CURRENT_TIMESTAMP AS TIMESTAMP FORMAT 'I');
        CALL getTimestampInMST(GCHTS) INTO mstGCHTS;
        ------------------
        
		CALL core.log.Debug(MessageFlowLabel||'Module name: mod_reverse_giftcard_906 - insert start');
		SET LocalEnvironment.Upd_GC.row[] = PASSTHRU('UPDATE '||RetekSchema||'.GIFTCARD
			SET GIFTCARDVALUE = ? ,GIFTCARDEXPIRYDATE =? , CURRENTCARDSTATE = ? , ISSUINGSTOREID = ?
			WHERE GIFTCARDNUMBER= ? '
			VALUES(Environment.GiftCrdVal,NULL,refCurGiftCrd.HISTORYFROMSTATE,NULL,Environment.GivxCrdNumb));
			-- Insert goes after update
			SET Insert_GCH = 'INSERT INTO '||RetekSchema||'.GIFTCARDHISTORY
			(GIFTCARDNUMBER,GIFTCARDHISTTIMESTAMP,HISTORYFROMSTATE,HISTORYTOSTATE,HISTORYAMOUNT,HISTORYLDAPPROFILE,STORE_ID,LINE_TRANSACTION_ID,LINE_SEQUENCE_NUMBER,GIFTCARDHISTORYCOMMENT)
			VALUES(?,?,?,?,?,?,?,?,?,?)';
			SET LocalEnvironment.Insert_GCH.Row[] =
			PASSTHRU(Insert_GCH VALUES(Environment.GivxCrdNumb,mstGCHTS,refCurGiftCrd.HISTORYTOSTATE,refCurGiftCrd.HISTORYFROMSTATE,Environment.ExstGiftCrdDtls.row[1].HISTORYAMOUNT,refInpMsg.UserId,SUBSTRING(refInpMsg.TransCode FROM 1 FOR 3),LineTransId,NULL,refInpMsg.GivexMsdIdFrmt||'- Reversal (CR)of previous #906-Activate'));
			CALL core.log.Debug(MessageFlowLabel||'Module name: mod_reverse_giftcard_906 - insert end');
		RETURN TRUE;
	END;
END MODULE;

CREATE DATABASE MODULE mod_reverse_giftcard_902
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Reference to existing Gift card details
		DECLARE refCurGiftCrd REFERENCE TO Environment.ExstGiftCrdDtls.row[1];
		DECLARE refInpMsg REFERENCE TO Root.DFDL.Input918.body;
		DECLARE Insert_GCH CHARACTER;
		DECLARE expYears CHARACTER '2';
		DECLARE LineTransId CHARACTER SUBSTRING(refInpMsg.TransCode FROM 1 FOR 3)||'*'||SUBSTRING(refInpMsg.TransCode FROM 4 FOR 2)||'*'||CAST( CURRENT_DATE AS CHARACTER FORMAT 'yyyyMMdd')||'*'||SUBSTRING(refInpMsg.TransCode FROM 6);
		
		------------- POE-27321 converted to MST time stamp --------
		DECLARE GCHTS TIMESTAMP;
        DECLARE mstGCHTS CHARACTER;
   		SET GCHTS = CAST(CURRENT_TIMESTAMP AS TIMESTAMP FORMAT 'I');
        CALL getTimestampInMST(GCHTS) INTO mstGCHTS;
        ------------------
		
		CALL core.log.Debug(MessageFlowLabel||'Module name: mod_reverse_giftcard_902 - insert start');
		SET LocalEnvironment.Upd_GC.row[] = PASSTHRU('UPDATE '||RetekSchema||'.GIFTCARD
			SET GIFTCARDVALUE = ? , CURRENTCARDSTATE = ?
			WHERE GIFTCARDNUMBER= ? '
			VALUES((refCurGiftCrd.GIFTCARDVALUE + refCurGiftCrd.HISTORYAMOUNT),refCurGiftCrd.HISTORYFROMSTATE,Environment.GivxCrdNumb));
			-- Insert goes after update
			SET Insert_GCH = 'INSERT INTO '||RetekSchema||'.GIFTCARDHISTORY
			(GIFTCARDNUMBER,GIFTCARDHISTTIMESTAMP,HISTORYFROMSTATE,HISTORYTOSTATE,HISTORYAMOUNT,HISTORYLDAPPROFILE,STORE_ID,LINE_TRANSACTION_ID,LINE_SEQUENCE_NUMBER,GIFTCARDHISTORYCOMMENT)
			VALUES(?,?,?,?,?,?,?,?,?,?)';
			SET LocalEnvironment.Insert_GCH.Row[] =
			PASSTHRU(Insert_GCH VALUES(Environment.GivxCrdNumb,mstGCHTS,refCurGiftCrd.HISTORYTOSTATE,refCurGiftCrd.HISTORYFROMSTATE,Environment.ExstGiftCrdDtls.row[1].HISTORYAMOUNT,refInpMsg.UserId,SUBSTRING(refInpMsg.TransCode FROM 1 FOR 3),LineTransId,NULL,refInpMsg.GivexMsdIdFrmt ||'- Reversal(CR) of previous'));
			CALL core.log.Debug(MessageFlowLabel||'Module name: mod_reverse_giftcard_902 - insert end');
		RETURN TRUE;
	END;
END MODULE;

CREATE DATABASE MODULE mod_reverse_giftcard_927
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Reference to existing Gift card details
		DECLARE refCurGiftCrd REFERENCE TO Environment.ExstGiftCrdDtls.row[1];
		DECLARE refInpMsg REFERENCE TO Root.DFDL.Input918.body;
		DECLARE Insert_GCH CHARACTER;
		
		------------- POE-27321 converted to MST time stamp --------
		DECLARE GCHTS TIMESTAMP;
        DECLARE mstGCHTS CHARACTER;
   		SET GCHTS = CAST(CURRENT_TIMESTAMP AS TIMESTAMP FORMAT 'I');
        CALL getTimestampInMST(GCHTS) INTO mstGCHTS;
        ------------------
        
		DECLARE LineTransId CHARACTER SUBSTRING(refInpMsg.TransCode FROM 1 FOR 3)||'*'||SUBSTRING(refInpMsg.TransCode FROM 4 FOR 2)||'*'||CAST( CURRENT_DATE AS CHARACTER FORMAT 'yyyyMMdd')||'*'||SUBSTRING(refInpMsg.TransCode FROM 6);
		CALL core.log.Debug(MessageFlowLabel||'Module name: mod_reverse_giftcard_927 - update start');
		SET LocalEnvironment.Upd_GC.row[] = PASSTHRU('UPDATE '||RetekSchema||'.GIFTCARD
			SET CURRENTCARDSTATE = ?
			WHERE GIFTCARDNUMBER= ? '
			VALUES(refCurGiftCrd.HISTORYFROMSTATE,Environment.GivxCrdNumb));

				SET LocalEnvironment.Upd_GC.row[] = PASSTHRU('UPDATE '||RetekSchema||'.GIFTCARD
				SET GIFTCARDVALUE = ? ,GIFTCARDEXPIRYDATE =? , ISSUINGSTOREID = ?
				WHERE GIFTCARDNUMBER= ? '
				VALUES(0,NULL,NULL,Environment.GivxCrdNumb));
			-- Insert goes after update
			SET Insert_GCH = 'INSERT INTO '||RetekSchema||'.GIFTCARDHISTORY
			(GIFTCARDNUMBER,GIFTCARDHISTTIMESTAMP,HISTORYFROMSTATE,HISTORYTOSTATE,HISTORYAMOUNT,HISTORYLDAPPROFILE,STORE_ID,LINE_TRANSACTION_ID,LINE_SEQUENCE_NUMBER,GIFTCARDHISTORYCOMMENT)
			VALUES(?,?,?,?,?,?,?,?,?,?)';
			SET LocalEnvironment.Insert_GCH.Row[] =
			PASSTHRU(Insert_GCH VALUES(Environment.GivxCrdNumb,mstGCHTS,refCurGiftCrd.HISTORYTOSTATE,refCurGiftCrd.HISTORYFROMSTATE,Environment.ExstGiftCrdDtls.row[1].HISTORYAMOUNT,refInpMsg.UserId,SUBSTRING(refInpMsg.TransCode FROM 1 FOR 3),LineTransId,NULL,refInpMsg.GivexMsdIdFrmt ||'- Reversal(CR) of previous'));
			CALL core.log.Debug(MessageFlowLabel||'Module name: mod_reverse_giftcard_927 - update end');
		RETURN TRUE;
	END;
END MODULE;

CREATE DATABASE MODULE mod_retrieve_current_giftcard_dtls
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL core.log.Debug(MessageFlowLabel||'Module name: mod_retrieve_current_giftcard_dtls - select start');
		SET Environment.CurGiftCrd.Row[] =
		PASSTHRU('SELECT * FROM '||RetekSchema||'.GIFTCARD where GIFTCARDNUMBER= ?'
		VALUES (Environment.GivxCrdNumb));
		CALL core.log.Debug(MessageFlowLabel||'Module name: mod_retrieve_current_giftcard_dtls - select end');
		RETURN TRUE;
	END;
END MODULE;


CREATE FILTER MODULE mod_CheckGiftCardPresent_918
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE refResult REFERENCE TO Environment.ExstGiftCrdDtls.row[1];
		--In case gift card not found then raise an exception
		IF NOT LASTMOVE(refResult) THEN
			CALL core.log.Debug(MessageFlowLabel||'Module name: CheckGiftCardPresent - RETURN FALSE');
			RETURN FALSE;
		END IF;
		CALL core.log.Debug(MessageFlowLabel||'Module name: CheckGiftCardPresent - RETURN TRUE');
		RETURN TRUE;
	END;
END MODULE;

CREATE FILTER MODULE mod_non_reversal_transaction_918
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE refResult REFERENCE TO Environment.ExstGiftCrdDtls.row[1];
		IF (Root.DFDL.Input918.body.TransCode = refResult.LINE_TRANSACTION_ID) THEN
			CALL core.log.Debug(MessageFlowLabel||'Module name: non_reversal_transaction - RETURN TRUE');
			RETURN TRUE;
		END IF;
		CALL core.log.Debug(MessageFlowLabel||'Module name: non_reversal_transaction - RETURN FALSE');
		RETURN FALSE;
	END;
END MODULE;

CREATE FILTER MODULE mod_CheckUserAdPass_918
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE refResult REFERENCE TO Environment.ExstGiftCrdDtls.row[1];
		IF ((Root.DFDL.Input918.body.UserId = UserName) AND (Root.DFDL.Input918.body.Passwrd = Password) ) THEN
			CALL core.log.Debug(MessageFlowLabel||'Module name: CheckUserAdPass - RETURN TRUE');
			RETURN TRUE;
		END IF;
		CALL core.log.Debug(MessageFlowLabel||'Module name: CheckUserAdPass - RETURN FALSE');
		RETURN FALSE;
	END;
END MODULE;
