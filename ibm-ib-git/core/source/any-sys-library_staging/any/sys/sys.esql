BROKER SCHEMA ${__any__}.${__sys__}

/*
<?xml version="1.0" encoding="UTF-8"?>
<${__sys__}:${_SYS_}Staging xmlns:${__sys__}="http://www.fglsports.com/schema/${__sys__}staging/tables/v1">
	<${__sys__}:${_SYS_}Header/>
	<${__sys__}:${_SYS_}Body>
		<${__sys__}:${_Object__}>
			<Field1>Value1</Field1>
			<Field2>Value2</Field2>
		</${__sys__}:${_Object__}>
	</${__sys__}:${_SYS_}Body>
</${__sys__}:${_SYS_}Staging>
*/

DECLARE _DROP CONSTANT CHARACTER 'DROP';

DECLARE ${_SYS_}SchemaName EXTERNAL CHARACTER '';

CREATE PROCEDURE getESBUser() RETURNS CHARACTER
BEGIN
	RETURN 'ESBUSER';
END;

CREATE PROCEDURE get${_SYS_}SchemaName() RETURNS CHARACTER
BEGIN
	RETURN ${_SYS_}SchemaName;
END;

DECLARE ns${_Sys__} CHARACTER NULL;

CREATE FILTER MODULE ${__sys__}_FilterOnNothing
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE ${__sys__}_SetupRouteToLabel
	DECLARE Label_${_Object__} CONSTANT CHARACTER 'A:${_Object__}';
	DECLARE Label_NoSuchLabel_DeliberateFailure CONSTANT CHARACTER 'NO-SUCH-LABEL-DELIBERATE-FAILURE';
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF ns${_Sys__} IS NULL THEN CALL common.${__sys__}_getNamespace() INTO ns${_Sys__};END IF;DECLARE ${__sys__} NAMESPACE ns${_Sys__};
		DECLARE rBody REFERENCE TO InputRoot.XMLNSC.${__sys__}:${_SYS_}Staging.${__sys__}:${_SYS_}Body;
		DECLARE theLabel CHARACTER;
		IF EXISTS(rBody.${__sys__}:${_Object__}[]) THEN
			SET theLabel = Label_${_Object__};
		ELSE
			SET theLabel = Label_NoSuchLabel_DeliberateFailure;
		END IF;
		DECLARE I INTEGER CARDINALITY(OutputLocalEnvironment.Destination.RouterList.DestinationData[])+1;
		SET OutputLocalEnvironment.Destination.RouterList.DestinationData[I]."label" = theLabel;
		SET OutputRoot = InputRoot;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE ${__sys__}_SubjectAreaIsNotSupported
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF ns${_Sys__} IS NULL THEN CALL common.${__sys__}_getNamespace() INTO ns${_Sys__};END IF;DECLARE ${__sys__} NAMESPACE ns${_Sys__};
		DECLARE rBody REFERENCE TO InputRoot.XMLNSC.${__sys__}:${_SYS_}Staging.${__sys__}:${_SYS_}Body;
		DECLARE subjectArea CHARACTER '<undefined>';
		IF EXISTS(rBody.[]) THEN
			SET subjectArea = ''''||rBody.*[1]||'''';
		END IF;
		DECLARE rEnv REFERENCE TO Environment;
		CALL core.audit.AuditState(rEnv, _DROP);
		CALL core.audit.AuditStateComment(rEnv, 'Subject Area '||subjectArea||' is not supported');
		SET OutputRoot = InputRoot;
		RETURN TRUE;
	END;
END MODULE;

CREATE DATABASE MODULE ${__sys__}_InsertInto${_Object__}
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF ns${_Sys__} IS NULL THEN CALL common.${__sys__}_getNamespace() INTO ns${_Sys__};END IF;DECLARE ${__sys__} NAMESPACE ns${_Sys__};
		DECLARE rBody REFERENCE TO Root.XMLNSC.${__sys__}:${_SYS_}Staging.${__sys__}:${_SYS_}Body;
		DECLARE r${_Object__} REFERENCE TO rBody.${__sys__}:${_Object__}[1];
		CALL ${__any__}.${__sys__}.insert.InsertInto${_Object__}(Environment, r${_Object__});
		RETURN TRUE;
	END;
END MODULE;
