BROKER SCHEMA etc.arts

--DECLARE eai NAMESPACE 'http://www.fgl.com/exchange/';

CREATE COMPUTE MODULE CollectionFailure
      CREATE FUNCTION Main() RETURNS BOOLEAN
      BEGIN
      	DECLARE refIn REFERENCE TO InputRoot;
		DECLARE refInCollection REFERENCE TO InputRoot.Collection;		
		DECLARE refOut REFERENCE TO OutputRoot;
		CALL common.headers_BuildMQMD(refIn,refOut);
		SET OutputRoot.MQMD.Format = 'MQSTR';        
		CREATE LASTCHILD OF OutputRoot AS refOut DOMAIN 'XMLNSC';
		SET refOut.Collection = refInCollection;
		PROPAGATE TO TERMINAL 'out';
		RETURN FALSE;
		END;        
END MODULE;

CREATE COMPUTE MODULE SplitCollection
      CREATE FUNCTION Main() RETURNS BOOLEAN
      BEGIN
        DECLARE refInMsgIn REFERENCE TO InputRoot.Collection.MsgIn[1];
        DECLARE refOut REFERENCE TO OutputRoot;
        DECLARE rOutput1 REFERENCE TO OutputRoot;      
        
        WHILE LASTMOVE(refInMsgIn) DO
        	  -- Build MQMD and set MQMD format to MQSTR
			  CALL common.headers_BuildMQMD(refInMsgIn,rOutput1);
			  SET OutputRoot.MQMD = refInMsgIn.MQMD;	
			  SET OutputRoot.MQRFH2 = refInMsgIn.MQRFH2;
              CREATE LASTCHILD OF OutputRoot AS refOut DOMAIN 'XMLNSC';
              SET refOut = refInMsgIn.XMLNSC;     
              PROPAGATE TO TERMINAL 'out';
              MOVE refInMsgIn NEXTSIBLING REPEAT NAME;
        END WHILE;        
        
        RETURN FALSE;
        END;            
END MODULE;

CREATE COMPUTE MODULE LogCollectionFailureMsg
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE schemaName CHARACTER 'etc.arts';
		DECLARE moduleName CHARACTER 'LogCollectionsFailureMsg';
		DECLARE rEnv REFERENCE TO Environment;
		SET OutputRoot = InputRoot;
		-- Set Message Id
		SET rEnv.__MsgId__ = CAST(InputLocalEnvironment.WrittenDestination.MQ.DestinationData.msgId AS CHARACTER);
		SET rEnv.__MsgIdForLog4J__ = SUBSTRING(rEnv.__MsgId__ FROM 3 FOR LENGTH(rEnv.__MsgId__)-3);
		--SET rEnv.__MsgIdForLog4J__= CAST(InputLocalEnvironment.WrittenDestination.MQ.DestinationData.msgId AS CHARACTER CCSID 1208 Encoding 546);
		CALL core.log.InfoMessage(rEnv, schemaName || '.' || moduleName,' A collection of  messages failed in the Collector node, message sent to collection failure queue - ' || InputLocalEnvironment.WrittenDestination.MQ.DestinationData.queueName);
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE LogFailure
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		DECLARE moduleName CHARACTER 'LogFailure';
		DECLARE schemaName CHARACTER 'etc.arts';
		DECLARE RefEnv REFERENCE TO Environment;
		DECLARE msgId CHARACTER CAST(InputLocalEnvironment.WrittenDestination.MQ.DestinationData.msgId AS CHARACTER);
		SET Environment.__MsgIdForLog4J__ = SUBSTRING(msgId FROM 3 FOR LENGTH(msgId)-3);
      	CALL core.log.InfoMessage(RefEnv, schemaName || '.' || moduleName, 'Message Failed while bulking, message sent to failure queue - ' || InputLocalEnvironment.WrittenDestination.MQ.DestinationData.queueName);		
		RETURN TRUE;
	END;
END MODULE;