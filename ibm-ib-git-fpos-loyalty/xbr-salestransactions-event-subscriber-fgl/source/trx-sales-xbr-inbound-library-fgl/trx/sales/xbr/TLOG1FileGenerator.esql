BROKER SCHEMA trx.sales.xbr


/***********************************************************************************************************************************************************************
* Version History:																			   			   
* Version 				Module 						Name 				 Date 					Revision Details
* ======= ==========================  		=====================  =====================  ==================================
* 1.0 	  SetTLOG1ReadyFileName					 Madanlal Tulsiram		 	30/11/2016		 Initial Version
* 1.1 	  SetTLOG1FileName						 Madanlal Tulsiram		 	30/11/2016		 Initial Version		   
* 1.2	  SetTrgFileName			 			 Greeshma Vidyadharan		22/12/2016		 Initial Version. 
* 1.3 	  All Modules		 	     			 Greeshma Vidyadharan  	    22/12/2016 	     Updated logic
* 1.4 	  All Modules		 	     			 Greeshma Vidyadharan  	    06/01/2017 	     Updated Filename	
* 1.5 	  SetLogParams		 	     			 Greeshma Vidyadharan  	    06/01/2017 	     Added logging.									   							 
************************************************************************************************************************************************************************/


---- External and shared variable declration
DECLARE FileName  EXTERNAL CHARACTER '';
DECLARE FileExtension  EXTERNAL CHARACTER '';
DECLARE FileInputDirectory EXTERNAL CHARACTER '';
DECLARE FileReadyDirectory EXTERNAL CHARACTER '';

--Set Logging Parameters
CREATE COMPUTE MODULE SetLogParams
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;			
		SET OutputRoot = InputRoot;
		SET rEnv.__MsgId__ = InputRoot.MQMD.MsgId;
		DECLARE __MsgId__ CHARACTER CAST(rEnv.__MsgId__ AS CHARACTER);
		SET rEnv.__MsgIdForLog4J__ = SUBSTRING(__MsgId__ FROM 3 FOR LENGTH(__MsgId__)-3);  			
	END;
END MODULE;

--Set Input File directory
CREATE COMPUTE MODULE SetInputFileDetails
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Declaring variables for Logging
		DECLARE schemaName CHARACTER 'trx.sales.xbr';
		DECLARE moduleName CHARACTER 'SetInputFileDetails';	
		SET OutputLocalEnvironment.Destination.File.Directory = FileInputDirectory;
		SET OutputLocalEnvironment.Destination.File.Name=FileName;
		SET OutputRoot = InputRoot;		
		RETURN TRUE;
	END;
END MODULE;


--Set TLOG Filenameto move to the Ready folder
CREATE COMPUTE MODULE SetTLOG1ReadyFileName
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;
		-- Declaring variables for Logging
		DECLARE schemaName CHARACTER 'trx.sales.xbr';
		DECLARE moduleName CHARACTER 'SetTLOG1ReadyFileName';
		
		SET OutputLocalEnvironment.Destination.File.Directory = FileReadyDirectory;
		SET OutputLocalEnvironment.Destination.File.Name=FileName || '.' || CAST(CURRENT_DATE - INTERVAL '1' DAY AS CHARACTER FORMAT 'yyyyMMdd');
		SET OutputRoot = InputRoot;
		 -- Writing success log.
		CALL core.log.InfoMessage(rEnv, schemaName || '.' || moduleName, 'Moving file ' || FileInputDirectory || '/' || FileName || ' to ' ||  FileReadyDirectory || '/' || OutputLocalEnvironment.Destination.File.Name);		
		RETURN TRUE;
	END;
END MODULE;

--Set TLOG Intermediate File Name.
CREATE COMPUTE MODULE SetTLOG1FileName
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;
		-- Declaring variables for Logging
		DECLARE schemaName CHARACTER 'trx.sales.xbr';
		DECLARE moduleName CHARACTER 'SetTLOG1FileName';		
		CALL core.log.DebugMessage(rEnv, schemaName || '.' || moduleName,  ' [_MODULE - START]' );	
		SET OutputLocalEnvironment.Destination.File.Name=FileName;
		SET OutputRoot = InputRoot;			
		 -- Writing success log.		
		CALL core.log.InfoMessage(rEnv, schemaName || '.' || moduleName, ' [_FLOW - MESSAGE] Body= ' || CAST(InputRoot.BLOB.BLOB AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId));	
		CALL core.log.DebugMessage(rEnv, schemaName || '.' || moduleName,  ' [_MODULE - END]' );
	END;
END MODULE;

--Write Success Log.
CREATE COMPUTE MODULE WriteSuccessLog
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment;
		-- Declaring variables for Logging
		DECLARE schemaName CHARACTER 'trx.sales.xbr';
		DECLARE moduleName CHARACTER 'WriteSuccessLog';			
		 -- Writing success log.		
		CALL core.log.InfoMessage(rEnv, schemaName || '.' || moduleName, 'Message appended to file: ' || InputLocalEnvironment.WrittenDestination.File.Directory || '/' || InputLocalEnvironment.WrittenDestination.File.Name);	
	END;
END MODULE;

--Set the trigger file name
CREATE COMPUTE MODULE SetTrgFileName
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN	
		DECLARE rEnv REFERENCE TO Environment;
		-- Declaring variables for Logging
		DECLARE schemaName CHARACTER 'trx.sales.xbr';
		DECLARE moduleName CHARACTER 'SetTrgFileName';
		DECLARE rOut REFERENCE TO OutputRoot;

		CREATE LASTCHILD OF OutputRoot As rOut DOMAIN 'BLOB';
		SET rOut.BLOB = CAST('Xbr Trigger File' AS BLOB CCSID InputRoot.Properties.CodedCharSetId);	
		
		SET OutputLocalEnvironment.Destination.File.Directory = FileReadyDirectory;
		SET OutputLocalEnvironment.Destination.File.Name=InputLocalEnvironment.Destination.File.Name || '.' || FileExtension ;		
		CALL core.log.InfoMessage(rEnv, schemaName || '.' || moduleName, 'Trigger File Name is ' || OutputLocalEnvironment.Destination.File.Name);	
		RETURN TRUE;
	END;

END MODULE;
