BROKER SCHEMA dat.product.pmm

DECLARE IIBPublication EXTERNAL CHARACTER '';
DECLARE schemaName CHARACTER 'dat.product.pmm';

-- Creates RFH2 header for publishing the message. The topic string is taken from UDP 'IIBPublication'
CREATE COMPUTE MODULE pmm_BuildRFH2
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot = InputRoot;
		IF NOT EXISTS(InputRoot.MQMD[]) THEN
			CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MQMD';
		END IF;
		IF 0 = CARDINALITY(InputRoot.MQRFH2[]) THEN
			SET OutputRoot.MQMD.Format = 'MQSTR';
			CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN('MQRFH2');
		END IF;
		
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Version = MQRFH_VERSION_2;
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Encoding = InputRoot.MQMD.Encoding;
		SET OutputRoot.MQRFH2.(MQRFH2.Field)CodedCharSetId = InputRoot.MQMD.CodedCharSetId;
		--SET OutputRoot.MQRFH2.(MQRFH2.Field)Format = InputRoot.MQMD.Format;
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Format = 'MQSTR';
		SET OutputRoot.MQRFH2.psc.Command = 'Publish';
		SET OutputRoot.MQRFH2.psc.Topic = IIBPublication;
		RETURN TRUE;
	END;
END MODULE;

-- Module to handle the situation when no match is found while publishing a message. A log message is written to capture this event. 
CREATE COMPUTE MODULE pmm_AuditNoMatch
      CREATE FUNCTION Main() RETURNS BOOLEAN
      BEGIN
      	DECLARE rEnv REFERENCE TO Environment;
      	DECLARE moduleName CHARACTER 'pmm_AuditNoMatch';
        CALL core.log.InfoMessage(rEnv, schemaName || '.' || moduleName, ' Publication node propagated out of terminal ''NoMatch''. Message Dropped.');        
        SET OutputRoot = InputRoot;
        RETURN TRUE;
      END;
END MODULE;